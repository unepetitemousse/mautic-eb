# PHP configuration.

option_settings:
  aws:elasticbeanstalk:container:php:phpini:
    document_root: /mautic
    memory_limit: 512M
    zlib.output_compression: "Off"
    allow_url_fopen: "On"
    display_errors: "Off"
    max_execution_time: 60

packages:
  yum:
    php71-imap: []

files:
  "/etc/php.d/z_project.ini":
    mode: "000644"
    owner: webapp
    group: webapp
    content: |
      ; Cloudflare upload limits are at 100M by default, support that level for heavy CSV imports primarily.
      post_max_size = 100M
      upload_max_filesize = 100M

      ; Session lifespan of 3 hours.
      session.gc_maxlifetime = 10800

      [opcache]
      opcache.enable = On
      opcache.enable_cli = On
      opcache.validate_timestamps = On
      opcache.revalidate_freq = 300
      opcache.memory_consumption = 256

      ; Cloudflare will timeout at 60 seconds, this limit will be automatically superceeded by Mautic as needed.
      max_execution_time = 60

      ; Rather high limit for Mautic in production.
      memory_limit = 512M

      ; Disable functions that could be dangerous to this application in Elastic Beanstalk.
      disable_functions = phpinfo,exec,system,passthru,shell_exec

      [apc]
      ; APCu must be loaded before APC Backward Compantibility (removed from php.ini by installation step)
      extension="apcu.so"
      extension="apc.so"
      apc.enabled = On
      apc.enable_cli = On
      apc.shm_size = 256M

      ; Enable mailparse (absolutely last, removed from php.ini by installation step)
      extension=mailparse.so

container_commands:
  50_install_imap:
    test: '[ ! -f /usr/lib64/php/7.1/modules/imap.so ] && echo "imap is not installed"'
    command: sudo yum install php71-imap -y
  51_install_mailparse:
    test: '[ ! -f /usr/lib64/php/7.1/modules/mailparse.so ] && echo "mailparse is not installed"'
    command: |
      sudo pecl7 install --force mailparse
      sudo -u root bash -c "sed '/extension=\"mailparse.so\"/d' /etc/php.ini > /etc/php.ini"
  # Mautic currently uses an older version of Doctrine which lacks APCu compatibility.
  # Installing APC Backward Compatibility allows the old APC functions to use APCu instead without modifying Mautic.
  52_install_apcu_bc:
    test: '[ ! -f /usr/lib64/php/7.1/modules/apc.so ] && echo "APC backward compatibility is not installed"'
    command: |
      no | sudo pecl7 install --force apcu_bc-beta
      sudo rm -rf /etc/php-7.1.d/40-apcu.ini
      sudo -u root bash -c "sed '/extension=\"apc.so\"/d' /etc/php.ini > /etc/php.ini"
      sudo -u root bash -c "sed '/extension=\"apcu.so\"/d' /etc/php.ini > /etc/php.ini"
  # A restart of apache is not typically necessary.
  # 52_restart_httpd:
  #   command: sudo service httpd restart
